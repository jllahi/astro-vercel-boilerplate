---
import Card from '@/components/Card.astro'
import Layout from '@/layouts/Layout.astro'

export const prerender = false

const ip = Astro.request.headers.get('x-real-ip')
const city = decodeURIComponent(Astro.request.headers.get('x-vercel-ip-city')!)
---

{/* <!-- <Layout seo={{ title: 'Welcome', description: 'How to use Vercel with Astro' }}> --> */}
<Layout>
  <main>
    <h1>Astro in <span class="text-gradient">Vercel</span></h1>
    <div class="banner">
      <p>Your city<br /><strong>{city}</strong></p>
      <p>Your IP address<br /><strong>{ip}</strong></p>
    </div>
    <section class="grid">
      <Card header="/ssr" href="/ssr">
        A page that uses server-side rendering (through Vercel Edge Functions)
      </Card>
      <Card header="/isr" href="/isr"
        >Incremental Static Regeneration (ISR) allows you to create or update content on your site
        without redeploying</Card
      >
      {/* <!-- <Card header="/ssr-with-swr-caching" href="/ssr-with-swr-caching">
        Similar to the previous page, but also caches the response on the Vercel Edge Network using
        cache-control headers
      </Card> -->  */}
    </section>
    <section class="grid">
      <Card header="/edge.json" href="/edge.json" target="_blank"
        >An Astro API Endpoint that returns JSON data using Vercel Edge Functions</Card
      >
      <Card header="/image" href="/image">Astro Asset using Vercel Image Optimization</Card>
    </section>
  </main>
</Layout>

<style>
  h1 {
    display: none;
  }
  .banner {
    padding: 0.5rem 1.5rem;
    border-radius: 0.4rem;
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(18ch, 1fr));
    gap: 1rem;
    margin-bottom: 40px;
    font-size: 120%;
  }
  .banner strong {
    font-size: 1.75em;
  }
</style>
{/* <!-- 

  .banner strong {
    font-size: 1.75em;
  }

  .instructions {
    line-height: 1.6;
    margin: 1rem 0;
    background: #4f39fa;
    padding: 1rem;
    border-radius: 0.4rem;
    color: var(--color-bg);
  }

  .instructions code {
    font-size: 0.875em;
    border: 0.1em solid var(--color-border);
    border-radius: 4px;
    padding: 0.15em 0.25em;
  }

</style> -->  */}
